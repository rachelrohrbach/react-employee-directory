{"version":3,"sources":["components/Header/index.js","utils/API.js","components/EmployeeResults/index.js","components/NameSearch/index.js","components/DOBSearch/index.js","components/Wrapper/index.js","components/Main/index.js","components/Container/index.js","App.js","serviceWorker.js","index.js"],"names":["Header","className","axios","get","Employees","props","employees","map","employee","key","id","value","alt","src","picture","thumbnail","name","first","last","phone","email","date","dateArray","split","year","join","formatDate","dob","NameSearch","style","display","flexFlow","padding","width","onChange","handleInputChange","type","placeholder","DOBSearch","marginLeft","fontSize","handleStartInputChange","handleEndInputChange","Wrapper","Main","state","nameFilter","dobStartFilter","dobEndFilter","sortType","getEmployees","API","then","res","setState","data","results","catch","err","console","log","sortEmployees","sortFunction","sortedEmployees","sort","employeeFilter","toLowerCase","includes","event","preventDefault","target","this","onClick","a","b","localeCompare","filter","React","Component","Container","fluid","App","Boolean","window","location","hostname","match","ReactDOM","render","StrictMode","document","getElementById","navigator","serviceWorker","ready","registration","unregister","error","message"],"mappings":"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","file":"static/js/main.892b1427.chunk.js","sourcesContent":["import React from 'react';\r\nimport './style.css';\r\n\r\nfunction Header () {\r\n    return (\r\n      <div className=\"header\">\r\n        <h1>Employee Directory</h1>\r\n        <p>Click on the Name or DOB headers to sort by descending order or use the search boxes to narrow your results.</p>\r\n      </div>\r\n    )\r\n  }\r\n\r\nexport default Header;","import axios from 'axios';\r\n\r\nexport default {\r\n  getEmployees: function () {\r\n    return axios.get('https://randomuser.me/api/?results=200&nat=us');\r\n  },\r\n};\r\n","import React from 'react';\r\n\r\nfunction Employees(props) {\r\n  function formatDate(date) {\r\n    const dateArray = date.split('-');\r\n    const year = dateArray[0];\r\n    const month = dateArray[1];\r\n    const dayArray = dateArray[2].split('T');\r\n    const day = dayArray[0];\r\n    const formattedDate = [month, day, year].join('-');\r\n    return formattedDate;\r\n  }\r\n\r\n  return (\r\n    <tbody>\r\n      {props.employees.map((employee) => (\r\n        <tr key={employee.id.value}>\r\n          <td>\r\n            <img alt=\"placeholder\" src={employee.picture.thumbnail} />\r\n          </td>\r\n          <td>\r\n            {employee.name.first} {employee.name.last}\r\n          </td>\r\n          <td>{employee.phone}</td>\r\n          <td>{employee.email}</td>\r\n          <td>{formatDate(employee.dob.date)}</td>\r\n        </tr>\r\n      ))}\r\n    </tbody>\r\n  );\r\n}\r\n\r\nexport default Employees;\r\n","import React from 'react';\r\n\r\nfunction NameSearch(props) {\r\n  return (\r\n    <div\r\n      className=\"form-group\"\r\n      style={{\r\n        display: 'flex',\r\n        flexFlow: 'row',\r\n        padding: '10px',\r\n        width: '50%',\r\n      }}\r\n    >\r\n      <input\r\n        onChange={props.handleInputChange}\r\n        name=\"search\"\r\n        type=\"text\"\r\n        className=\"form-control\"\r\n        placeholder=\"Search\"\r\n        id=\"search\"\r\n      />\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default NameSearch;\r\n","import React from 'react';\r\n\r\nfunction DOBSearch(props) {\r\n  return (\r\n    <div\r\n      className=\"form-group\"\r\n      style={{ display: 'flex', flexFlow: 'row', padding: '10px', marginLeft: '10px' }}\r\n    >\r\n      <label className=\"input-group-text\">\r\n        <span className=\"badge\" style={{ padding: '10px', fontSize: '18px' }}>\r\n          DOB\r\n        </span>\r\n      </label>\r\n      <input\r\n        onChange={props.handleStartInputChange}\r\n        name=\"start\"\r\n        type=\"date\"\r\n        className=\"form-control\"\r\n        id=\"startingDate\"\r\n        style={{ padding: '15px' }}\r\n      />\r\n      <input\r\n        onChange={props.handleEndInputChange}\r\n        name=\"end\"\r\n        type=\"date\"\r\n        className=\"form-control\"\r\n        id=\"endingDate\"\r\n        style={{ padding: '15px' }}\r\n      />\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default DOBSearch;\r\n","import './style.css';\n\nimport React from 'react';\n\nfunction Wrapper(props) {\n  return <main className=\"wrapper\" {...props} />;\n}\n\nexport default Wrapper;\n","import React from 'react';\r\nimport API from '../../utils/API';\r\nimport Employees from '../EmployeeResults';\r\nimport NameSearch from '../NameSearch';\r\nimport DOBSearch from '../DOBSearch';\r\nimport Wrapper from '../Wrapper';\r\n\r\nclass Main extends React.Component {\r\n  state = {\r\n    employees: [],\r\n    nameFilter: '',\r\n    dobStartFilter: '',\r\n    dobEndFilter: '',\r\n    sortType: '',\r\n  };\r\n\r\n  componentDidMount() {\r\n    this.getEmployees();\r\n  }\r\n\r\n  getEmployees = () => {\r\n    API.getEmployees()\r\n      .then((res) => {\r\n        this.setState({\r\n          employees: res.data.results,\r\n        });\r\n      })\r\n      .catch((err) => console.log(err));\r\n  };\r\n\r\n  sortEmployees = (sortFunction) => {\r\n    const sortedEmployees = this.state.employees.sort(sortFunction);\r\n    this.setState({\r\n      employees: sortedEmployees,\r\n    });\r\n  };\r\n\r\n  employeeFilter = (employee) => {\r\n    const { dobStartFilter, dobEndFilter } = this.state;\r\n\r\n    if (dobStartFilter === '' && dobEndFilter !== '') {\r\n      return (\r\n        (employee.name.first.toLowerCase().includes(this.state.nameFilter) ||\r\n          employee.name.last.toLowerCase().includes(this.state.nameFilter)) &&\r\n        employee.dob.date <= this.state.dobEndFilter\r\n      );\r\n    } else if (dobStartFilter !== '' && dobEndFilter === '') {\r\n      return (\r\n        (employee.name.first.toLowerCase().includes(this.state.nameFilter) ||\r\n          employee.name.last.toLowerCase().includes(this.state.nameFilter)) &&\r\n        this.state.dobStartFilter <= employee.dob.date\r\n      );\r\n    } else if (dobStartFilter === '' && dobEndFilter === '') {\r\n      return (\r\n        employee.name.first.toLowerCase().includes(this.state.nameFilter) ||\r\n        employee.name.last.toLowerCase().includes(this.state.nameFilter)\r\n      );\r\n    }\r\n\r\n    return (\r\n      (employee.name.first.toLowerCase().includes(this.state.nameFilter) ||\r\n        employee.name.last.toLowerCase().includes(this.state.nameFilter)) &&\r\n      this.state.dobStartFilter <= employee.dob.date &&\r\n      employee.dob.date <= this.state.dobEndFilter\r\n    );\r\n  };\r\n\r\n  handleStartInputChange = (event) => {\r\n    event.preventDefault();\r\n    const value = event.target.value;\r\n    this.setState({\r\n      dobStartFilter: value,\r\n    });\r\n  };\r\n\r\n  handleEndInputChange = (event) => {\r\n    event.preventDefault();\r\n    const value = event.target.value;\r\n    this.setState({\r\n      dobEndFilter: value,\r\n    });\r\n  };\r\n\r\n  handleInputChange = (event) => {\r\n    event.preventDefault();\r\n    const value = event.target.value;\r\n    this.setState({\r\n      nameFilter: value.toLowerCase(),\r\n    });\r\n  };\r\n\r\n  render() {\r\n    return (\r\n      <Wrapper>\r\n        <div className=\"row\">\r\n          <DOBSearch\r\n            handleStartInputChange={this.handleStartInputChange}\r\n            handleEndInputChange={this.handleEndInputChange}\r\n          />\r\n          <NameSearch handleInputChange={this.handleInputChange} />\r\n        </div>\r\n\r\n        <div className=\"datatable mt-5\">\r\n          <table\r\n            id=\"table\"\r\n            className=\"table table-striped table-hover table-condensed\"\r\n          >\r\n            <thead>\r\n              <tr>\r\n                <th>Image</th>\r\n                <th\r\n                  onClick={() =>\r\n                    this.sortEmployees((a, b) =>\r\n                      a.name.first.localeCompare(b.name.first)\r\n                    )\r\n                  }\r\n                >\r\n                  Name\r\n                </th>\r\n                <th>Phone</th>\r\n                <th>Email</th>\r\n                <th\r\n                  onClick={() =>\r\n                    this.sortEmployees((a, b) =>\r\n                      a.dob.date.localeCompare(b.dob.date)\r\n                    )\r\n                  }\r\n                >\r\n                  DOB\r\n                </th>\r\n              </tr>\r\n            </thead>\r\n            <Employees\r\n              sort={this.state.sortType}\r\n              employees={this.state.employees.filter(this.employeeFilter)}\r\n            />\r\n          </table>\r\n        </div>\r\n      </Wrapper>\r\n    );\r\n  }\r\n}\r\nexport default Main;\r\n","import React from 'react';\n\nfunction Container(props) {\n  return (\n    <div className={`container${props.fluid ? '-fluid' : ''}`} {...props} />\n  );\n}\n\nexport default Container;\n","import './App.css';\nimport Header from './components/Header';\nimport React from 'react';\nimport Main from './components/Main';\nimport Container from './components/Container';\n\nfunction App() {\n  return (\n    <div className=\"App\">\n      <Header />\n      <Container>\n        <Main />\n      </Container>\n    </div>\n  );\n}\n\nexport default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.0/8 are considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl, {\n    headers: { 'Service-Worker': 'script' },\n  })\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready\n      .then(registration => {\n        registration.unregister();\n      })\n      .catch(error => {\n        console.error(error.message);\n      });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}